version: "3.7"
services:
  icemicro:
    # 指定为从上下文路径 ./dir/Dockerfile 所构建的镜像
    build: ./Ice.Micro
    # 指定自定义容器名称
    container_name: IceMicro
    networks:
      # 加入ice-network网络
      default:
        # 网络上的名称
        aliases:
         - IceMicro
    # 重启策略，取值 "no" | always | on-failure | unless-stopped
    restart: "always"
  icemicrofront:
    # 指定为从上下文路径 ./dir/Dockerfile 所构建的镜像
    build: ./Ice.MicroFront
    # 指定自定义容器名称
    container_name: IceMicroFront
    networks:
      # 加入ice-network网络
      default:
        # 网络上的名称
        aliases:
         - IceMicroFront
    # 重启策略，取值 "no" | always | on-failure | unless-stopped
    restart: "always"
  icewebsite:
    # 指定为从上下文路径 ./dir/Dockerfile 所构建的镜像
    build: ./Ice.WebSite
    # 指定自定义容器名称
    container_name: IceWebSite
    networks:
      # 加入ice-network网络
      default:
        # 网络上的名称
        aliases:
         - IceWebSite
    # 重启策略，取值 "no" | always | on-failure | unless-stopped
    restart: "always"  
  iceaidb:
    image: qdrant/qdrant:v1.4.1
    container_name: IceAIDB
    networks:
      # 加入ice-network网络
      default:
        # 网络上的名称
        aliases:
         - IceAIDB
    volumes:
      - ./data/qdrant_storage:/qdrant/storage
    # 重启策略，取值 "no" | always | on-failure | unless-stopped
    restart: "always"
  mysql:
    image: mysql:5.7.39
    container_name: IceDB
    environment:
      MYSQL_ROOT_PASSWORD: fuckStrongP@ssw0rd
      MYSQL_USER: myuser
      MYSQL_PASSWORD: fuckStrongP@ssw0rd
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      # 加入ice-network网络
      default:
        # 网络上的名称
        aliases:
         - IceAIDB
    restart: "always"

  ################ 以下是kong的配置 ###############

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:10
    container_name: kong-postgres
    restart: on-failure
    networks:
      - default
    volumes:
      - /home/software/postgres/data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong123
      POSTGRES_DB: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:2.8.1-ubuntu
    command: kong migrations bootstrap
    networks:
      - default
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong123
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:2.8.1-ubuntu
    restart: on-failure
    networks:
      - default
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong123
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PREFIX: /usr/local/kong/
      KONG_PROXY_ACCESS_LOG: logs/kong_client_access.log
      KONG_ADMIN_ACCESS_LOG: logs/kong_admin_access.log
      KONG_PROXY_ERROR_LOG: logs/kong_error.log
      KONG_ADMIN_ERROR_LOG: logs/kong_error.log
    depends_on:
      - kong-database
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "80:8000"
      - "443:8443"

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga:0.14.9
    command: "-c prepare -a postgres -u postgresql://kong:kong123@kong-database:5432/konga"
    networks:
      - default
    restart: on-failure
    depends_on:
      - kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:0.14.9
    restart: always
    networks:
        - default   
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:kong123@kong-database:5432/konga
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "1337:1337"
